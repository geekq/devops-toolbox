#!/usr/bin/env ruby
require 'trollop'
require 'rake'
include FileUtils::Verbose

opts = Trollop::options do
  opt :target_host, "Target host to initialize and provision with puppet, either an IP or a resolvable name", :type => :string, :required => true
  opt :user, "User for using in SSH connection", :type => :string
  opt :identity_file, "An optional identity file for SSH connection", :type => :string
  opt :skip_repo_update, "Skip apt-get update - useful for testing to shorten the run", :type => :boolean
  opt :main_puppet_file, "Main file - entry for the puppet configuration", :type => :string, :required => true
end

ssh_cmd = "ssh "
ssh_cmd << "#{opts[:user]}@" if opts[:user]
ssh_cmd << opts[:target_host]
ssh_cmd << " -i #{opts[:identity_file]}" if opts[:identity_file]

rsync_cmd = "rsync -avzcO --no-p --no-group --delete "
rsync_cmd << "--rsh='ssh -i #{opts[:identity_file]}' " if opts[:identity_file]

rsync_remote = ''
rsync_remote << "#{opts[:user]}@" if opts[:user]
rsync_remote << opts[:target_host]

sh %Q[#{ssh_cmd} "
  #{'sudo apt-get update' unless opts[:skip_repo_update]}
  sudo apt-get install puppet
  puppet --version
  sudo chown -Rc #{opts[:user]} /etc/puppet/manifests/
  sudo chown -Rc #{opts[:user]} /etc/puppet/modules/
"]

puts
puts "UPLOAD PUPPET MANIFESTS AND MODULES"
sh %Q[
  #{rsync_cmd} #{opts[:main_puppet_file]} #{rsync_remote}:/etc/puppet/manifests/
  # #{rsync_cmd} puppet/modules #{rsync_remote}:/etc/puppet/
]

sh %Q[#{ssh_cmd} "
  chmod -R 775 /etc/puppet/manifests
  chmod -R 775 /etc/puppet/modules
  echo
  echo RUN PUPPET CONFIGURATION ON THE CLIENT
  sudo puppet apply -v --modulepath=/etc/puppet/modules /etc/puppet/manifests/#{File.basename(opts[:main_puppet_file])}
"]
